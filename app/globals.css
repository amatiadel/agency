@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Druk Wide Cyr';
  src: url('/fonts/drukwidecyr-bold.otf') format('opentype');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Stretch Sans Free';
  src: url('/STRRETCH SANS FREE.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Ambidexter';
  src: url('/ambidexter_regular.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

.stretch-font {
  font-family: 'Stretch Sans Free', 'Arial Black', 'Impact', sans-serif;
  font-weight: 900;
  font-display: swap;
}

.ambidexter-font {
  font-family: 'Ambidexter', 'Arial Black', 'Impact', sans-serif;
  font-weight: normal;
  font-display: swap;
}

.druk-font {
  font-family: 'Druk Wide Cyr', 'Arial Black', sans-serif;
  font-weight: 700;
  font-display: swap;
}

:root {
  --background: #0A0A0A;
  --foreground: #FFFFFF;
  --accent: #FF3D00;
  --accent-foreground: #FFFFFF;
  --secondary: #00E676;
  --muted: #1A1A1A;
}

/* Light theme variables */
[data-theme="light"] {
  --background: #FFFFFF;
  --foreground: #0A0A0A;
  --accent: #FF3D00;
  --accent-foreground: #FFFFFF;
  --secondary: #00E676;
  --muted: #F5F5F5;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  background-color: var(--background);
  color: var(--foreground);
  font-family: 'Inter', system-ui, sans-serif;
}

body {
  color: var(--foreground);
  background: var(--background);
  font-weight: 500;
}

a {
  color: inherit;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #1A1A1A;
}

::-webkit-scrollbar-thumb {
  background: #404040;
  border-radius: 8px;
}

::-webkit-scrollbar-thumb:hover {
  background: #606060;
}

/* === Logo Animation Styles === */
/* removing default button style */
.button {
  margin: 0;
  height: auto;
  background: transparent;
  padding: 0;
  border: none;
  cursor: pointer;
}

/* button styling */
.button {
  --border-right: 6px;
  --text-stroke-color: rgba(255,255,255,0.8);
  --animation-color: #37FF8B;
  --fs-size: 2em;
  letter-spacing: 3px;
  text-decoration: none;
  font-size: var(--fs-size);
  font-family: "Arial";
  position: relative;
  text-transform: uppercase;
  color: transparent;
  -webkit-text-stroke: 1px var(--text-stroke-color);
}

/* this is the text, when you hover on button */
.hover-text {
  position: absolute;
  box-sizing: border-box;
  content: attr(data-text);
  color: var(--animation-color);
  width: 0%;
  inset: 0;
  border-right: var(--border-right) solid var(--animation-color);
  overflow: hidden;
  transition: 0.5s;
  -webkit-text-stroke: 1px var(--animation-color);
}

/* hover */
.button:hover .hover-text {
  width: 100%;
  filter: drop-shadow(0 0 23px var(--animation-color));
}

/* Add glow to the main button on hover */
.button:hover {
  filter: drop-shadow(0 0 23px var(--animation-color));
  text-shadow: 0 0 20px var(--animation-color);
  color: var(--animation-color);
  -webkit-text-stroke: 1px var(--animation-color);
}

/* === Animated Text Loader Styles === */
.card {
  /* color used to softly clip top and bottom of the .words container */
  background-color: var(--muted);
  padding: 1rem 2rem;
  border-radius: 2.5rem;
  width: 100%;
  min-height: 80vh;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0;
}

.loader {
  color: rgb(124, 124, 124);
  font-family: "Inter", system-ui, sans-serif;
  font-weight: 500;
  font-size: 3.5rem;
  line-height: 0.9;
  letter-spacing: -0.02em;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: auto;
  padding: 10px 10px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-radius: 16px;
}

@media (max-width: 639px) {
  .card {
    padding: 0.5rem 1rem;
    min-height: 100vh;
    border-radius: 0;
  }
  
  .loader {
    font-size: 2.5rem;
    padding: 0.5rem;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .words {
    height: 1.1em;
  }
}

@media (min-width: 640px) {
  .loader {
    font-size: 5rem;
    letter-spacing: -0.03em;
  }
}

.words {
  overflow: hidden;
  position: relative;
  margin: 0;
  padding: 0;
}

.words::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    var(--bg-color) 0%,
    transparent 15%,
    transparent 85%,
    var(--bg-color) 100%
  );
  pointer-events: none;
  z-index: 20;
}

.word {
  display: block;
  height: 100%;
  padding: 0;
  margin: 0;
  color: #956afa;
  font-weight: 900;
  animation: spin_4991 4s infinite;
}

@keyframes spin_4991 {
  10% {
    -webkit-transform: translateY(-102%);
    transform: translateY(-102%);
  }

  25% {
    -webkit-transform: translateY(-100%);
    transform: translateY(-100%);
  }

  35% {
    -webkit-transform: translateY(-202%);
    transform: translateY(-202%);
  }

  50% {
    -webkit-transform: translateY(-200%);
    transform: translateY(-200%);
  }

  60% {
    -webkit-transform: translateY(-302%);
    transform: translateY(-302%);
  }

  75% {
    -webkit-transform: translateY(-300%);
    transform: translateY(-300%);
  }

  85% {
    -webkit-transform: translateY(-402%);
    transform: translateY(-402%);
  }

  100% {
    -webkit-transform: translateY(-400%);
    transform: translateY(-400%);
  }
}

/* === Hero3 Rotating Text Styles === */
.rotating-text-container {
  perspective: 1000px;
  transform-style: preserve-3d;
}

.rotating-text {
  display: inline-block;
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.rotating-text-enter {
  opacity: 0;
  transform: rotateX(90deg) translateY(20px);
}

.rotating-text-enter-active {
  opacity: 1;
  transform: rotateX(0deg) translateY(0px);
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.rotating-text-exit {
  opacity: 1;
  transform: rotateX(0deg) translateY(0px);
}

.rotating-text-exit-active {
  opacity: 0;
  transform: rotateX(-90deg) translateY(-20px);
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

/* === 3D Flip Card Styles === */
.perspective-1000 {
  perspective: 1000px;
  transform: translateZ(0);
  will-change: transform;
}

.transform-style-preserve-3d {
  transform-style: preserve-3d;
}

.backface-hidden {
  backface-visibility: hidden;
  transform: translateZ(0);
}

.rotate-y-180 {
  transform: rotateY(180deg) translateZ(0);
}

/* === Gradient Background Animation === */
.gradient-background {
  background: linear-gradient(300deg,#000000,#ffa000,#8c4500,#fefefe,#f96a13);
  background-size: 300% 300%;
  animation: gradient-animation 30s ease infinite;
}

@keyframes gradient-animation {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}


/* === Runaway Button Animation === */
/* Position-based animation handled by React state and CSS transitions */

/* === Theme Switch Styles === */
/* From Uiverse.io by satyamchaudharydev */ 
/* The switch - the box around the slider */
.switch {
  display: block;
  --width-of-switch: 3.5em;
  --height-of-switch: 2em;
  /* size of sliding icon -- sun and moon */
  --size-of-icon: 1.4em;
  /* it is like a inline-padding of switch */
  --slider-offset: 0.3em;
  position: relative;
  width: var(--width-of-switch);
  height: var(--height-of-switch);
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #f4f4f5;
  transition: .4s;
  border-radius: 60px;
}

.slider:before {
  position: absolute;
  content: "";
  height: var(--size-of-icon,1.4em);
  width: var(--size-of-icon,1.4em);
  border-radius: 40px;
  left: var(--slider-offset,0.3em);
  top: 50%;
  transform: translateY(-50%);
  background: linear-gradient(40deg,#ff0080,#ff8c00 70%);
  transition: .4s;
}

input:checked + .slider {
  background-color: #303136;
}

input:checked + .slider:before {
  left: calc(100% - (var(--size-of-icon,1.4em) + var(--slider-offset,0.3em)));
  background: #303136;
  /* change the value of second inset in box-shadow to change the angle and direction of the moon  */
  box-shadow: inset -3px -2px 5px -2px #8983f7, inset -10px -4px 0 0 #a3dafb;
}